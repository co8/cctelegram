pub mod config;
pub mod events;
pub mod telegram;
pub mod storage;
pub mod utils;
pub mod internal_processor;
pub mod tier_orchestrator;
pub mod mcp;

pub use config::Config;
pub use events::{EventWatcher, EventProcessor, types};
pub use telegram::TelegramBot;
pub use telegram::messages::{MessageFormatter, MessageStyle};
pub use telegram::handlers::CallbackHandler;
pub use storage::FileStore;
pub use storage::queue::EventQueue;
pub use storage::{MessagePersistenceSystem, MessagePersistenceConfig, PersistedMessage, MessageStatus, PersistenceStats};
pub use storage::{PersistentMessageQueue, PersistentQueueConfig, EventQueueIntegration, ProcessingResult as MessageProcessingResult, MessagePriority, QueueStats};
pub use storage::{PersistenceIntegratedProcessor, PersistenceIntegrationConfig, IntegrationStats, create_default_processor, create_processor_with_path};
pub use storage::{MessageDeduplicationSystem, DeduplicationConfig, DeduplicationResult, DeduplicationStats, DeduplicationMiddleware};
pub use utils::security::{SecurityManager, RateLimiter};
pub use utils::errors::BridgeError;
pub use utils::performance::{PerformanceMonitor, PerformanceConfig};
pub use utils::{setup_logging, HealthServer};
pub use internal_processor::{InternalProcessor, ResponsePayload, ProcessingResult};
pub use tier_orchestrator::{TierOrchestrator, TierType, TierHealth, TierSelection, TierFailoverEvent, CircuitBreakerState};
pub use mcp::{McpIntegration, McpConfig, McpConnectionManager, McpError, McpErrorCode, McpTelemetry};